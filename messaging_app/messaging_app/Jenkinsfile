pipeline {
    agent any

    environment {
        VENV = "venv"
        IMAGE_NAME = "your-dockerhub-username/messaging_app"
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    credentialsId: 'github_credentials',
                    url: 'https://github.com/Eric-hack/alx-backend-python.git'
            }
        }

        stage('Set up Python Environment') {
            steps {
                script {
                    sh '''
                        python3 -m venv ${VENV}
                        source ${VENV}/bin/activate
                        pip install --upgrade pip
                        pip install -r messaging_app/requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh '''
                        source ${VENV}/bin/activate
                        pytest messaging_app/tests/ --junitxml=report.xml --maxfail=1 --disable-warnings
                    '''
                }
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                        docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f messaging_app/Dockerfile messaging_app/
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub_credentials', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    script {
                        sh '''
                            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
                            docker push ${IMAGE_NAME}:${IMAGE_TAG}
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build and push successful!"
        }
        failure {
            echo "❌ Build failed! Check logs."
        }
    }
}
